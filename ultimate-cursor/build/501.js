"use strict";(globalThis.webpackChunkultimate_cursor=globalThis.webpackChunkultimate_cursor||[]).push([[501],{501:(e,t,n)=>{n.d(t,{default:()=>i});var r=n(609);const i=function({SIM_RESOLUTION:e=128,DYE_RESOLUTION:t=1440,CAPTURE_RESOLUTION:n=512,DENSITY_DISSIPATION:i=3.5,VELOCITY_DISSIPATION:o=2,PRESSURE:a=.1,PRESSURE_ITERATIONS:u=20,CURL:c=3,SPLAT_RADIUS:l=.2,SPLAT_FORCE:v=6e3,SHADING:f=!0,COLOR_UPDATE_SPEED:s=10,BACK_COLOR:m={r:.5,g:0,b:0},TRANSPARENT:h=!0,wrapperElement:d,props:E}){const g=(0,r.useRef)(null);return(0,r.useEffect)((()=>{const r=g.current,T=!d||d===document.body;if(!r)return;let x={SIM_RESOLUTION:e,DYE_RESOLUTION:t,CAPTURE_RESOLUTION:n,DENSITY_DISSIPATION:i,VELOCITY_DISSIPATION:o,PRESSURE:a,PRESSURE_ITERATIONS:u,CURL:c,SPLAT_RADIUS:l,SPLAT_FORCE:v,SHADING:f,COLOR_UPDATE_SPEED:s,PAUSED:!1,BACK_COLOR:m,TRANSPARENT:h,...E||{}},R=[new function(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[0,0,0]}];const{gl:p,ext:S}=function(e){const t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let n=e.getContext("webgl2",t);const r=!!n;let i,o;r||(n=e.getContext("webgl",t)||e.getContext("experimental-webgl",t)),r?(n.getExtension("EXT_color_buffer_float"),o=n.getExtension("OES_texture_float_linear")):(i=n.getExtension("OES_texture_half_float"),o=n.getExtension("OES_texture_half_float_linear")),n.clearColor(0,0,0,1);const a=r?n.HALF_FLOAT:i&&i.HALF_FLOAT_OES;let u,c,l;return r?(u=D(n,n.RGBA16F,n.RGBA,a),c=D(n,n.RG16F,n.RG,a),l=D(n,n.R16F,n.RED,a)):(u=D(n,n.RGBA,n.RGBA,a),c=D(n,n.RGBA,n.RGBA,a),l=D(n,n.RGBA,n.RGBA,a)),{gl:n,ext:{formatRGBA:u,formatRG:c,formatR:l,halfFloatTexType:a,supportLinearFiltering:o}}}(r);function D(e,t,n,r){if(!function(e,t,n,r){const i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,n,r,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);return e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE}(e,t,n,r))switch(t){case e.R16F:return D(e,e.RG16F,e.RG,r);case e.RG16F:return D(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:t,format:n}}S.supportLinearFiltering||(x.DYE_RESOLUTION=256,x.SHADING=!1);class A{constructor(e,t){this.uniforms={},this.program=_(e,t),this.uniforms=y(this.program)}bind(){p.useProgram(this.program)}}function _(e,t){let n=p.createProgram();return p.attachShader(n,e),p.attachShader(n,t),p.linkProgram(n),p.getProgramParameter(n,p.LINK_STATUS)||console.trace(p.getProgramInfoLog(n)),n}function y(e){let t=[],n=p.getProgramParameter(e,p.ACTIVE_UNIFORMS);for(let r=0;r<n;r++){let n=p.getActiveUniform(e,r).name;t[n]=p.getUniformLocation(e,n)}return t}function L(e,t,n){t=function(e,t){if(!t)return e;let n="";return t.forEach((e=>{n+="#define "+e+"\n"})),n+e}(t,n);const r=p.createShader(e);return p.shaderSource(r,t),p.compileShader(r),p.getShaderParameter(r,p.COMPILE_STATUS)||console.trace(p.getShaderInfoLog(r)),r}const w=L(p.VERTEX_SHADER,"\n        precision highp float;\n        attribute vec2 aPosition;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform vec2 texelSize;\n\n        void main () {\n            vUv = aPosition * 0.5 + 0.5;\n            vL = vUv - vec2(texelSize.x, 0.0);\n            vR = vUv + vec2(texelSize.x, 0.0);\n            vT = vUv + vec2(0.0, texelSize.y);\n            vB = vUv - vec2(0.0, texelSize.y);\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n        }\n      "),U=L(p.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n\n        void main () {\n            gl_FragColor = texture2D(uTexture, vUv);\n        }\n      "),F=L(p.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float value;\n\n        void main () {\n            gl_FragColor = value * texture2D(uTexture, vUv);\n        }\n      "),b=L(p.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTarget;\n        uniform float aspectRatio;\n        uniform vec3 color;\n        uniform vec2 point;\n        uniform float radius;\n\n        void main () {\n            vec2 p = vUv - point.xy;\n            p.x *= aspectRatio;\n            vec3 splat = exp(-dot(p, p) / radius) * color;\n            vec3 base = texture2D(uTarget, vUv).xyz;\n            gl_FragColor = vec4(base + splat, 1.0);\n        }\n      "),P=L(p.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform vec2 dyeTexelSize;\n        uniform float dt;\n        uniform float dissipation;\n\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n            vec2 st = uv / tsize - 0.5;\n            vec2 iuv = floor(st);\n            vec2 fuv = fract(st);\n\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n        }\n\n        void main () {\n            #ifdef MANUAL_FILTERING\n                vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n                vec4 result = bilerp(uSource, coord, dyeTexelSize);\n            #else\n                vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n                vec4 result = texture2D(uSource, coord);\n            #endif\n            float decay = 1.0 + dissipation * dt;\n            gl_FragColor = result / decay;\n        }\n      ",S.supportLinearFiltering?null:["MANUAL_FILTERING"]),I=L(p.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).x;\n            float R = texture2D(uVelocity, vR).x;\n            float T = texture2D(uVelocity, vT).y;\n            float B = texture2D(uVelocity, vB).y;\n\n            vec2 C = texture2D(uVelocity, vUv).xy;\n            if (vL.x < 0.0) { L = -C.x; }\n            if (vR.x > 1.0) { R = -C.x; }\n            if (vT.y > 1.0) { T = -C.y; }\n            if (vB.y < 0.0) { B = -C.y; }\n\n            float div = 0.5 * (R - L + T - B);\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n        }\n      "),B=L(p.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).y;\n            float R = texture2D(uVelocity, vR).y;\n            float T = texture2D(uVelocity, vT).x;\n            float B = texture2D(uVelocity, vB).x;\n            float vorticity = R - L - T + B;\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n        }\n      "),C=L(p.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uCurl;\n        uniform float curl;\n        uniform float dt;\n\n        void main () {\n            float L = texture2D(uCurl, vL).x;\n            float R = texture2D(uCurl, vR).x;\n            float T = texture2D(uCurl, vT).x;\n            float B = texture2D(uCurl, vB).x;\n            float C = texture2D(uCurl, vUv).x;\n\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n            force /= length(force) + 0.0001;\n            force *= curl * C;\n            force.y *= -1.0;\n\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity += force * dt;\n            velocity = min(max(velocity, -1000.0), 1000.0);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),N=L(p.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uDivergence;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            float C = texture2D(uPressure, vUv).x;\n            float divergence = texture2D(uDivergence, vUv).x;\n            float pressure = (L + R + B + T - divergence) * 0.25;\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n        }\n      "),O=L(p.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity.xy -= vec2(R - L, T - B);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),X=(p.bindBuffer(p.ARRAY_BUFFER,p.createBuffer()),p.bufferData(p.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),p.STATIC_DRAW),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,p.createBuffer()),p.bufferData(p.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),p.STATIC_DRAW),p.vertexAttribPointer(0,2,p.FLOAT,!1,0,0),p.enableVertexAttribArray(0),(e,t=!1)=>{null==e?(p.viewport(0,0,p.drawingBufferWidth,p.drawingBufferHeight),p.bindFramebuffer(p.FRAMEBUFFER,null)):(p.viewport(0,0,e.width,e.height),p.bindFramebuffer(p.FRAMEBUFFER,e.fbo)),t&&(p.clearColor(0,0,0,1),p.clear(p.COLOR_BUFFER_BIT)),p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0)});let z,M,G,Y,H;const V=new A(w,U),W=new A(w,F),k=new A(w,b),K=new A(w,P),q=new A(w,I),j=new A(w,B),J=new A(w,C),Q=new A(w,N),Z=new A(w,O),$=new class{constructor(e,t){this.vertexShader=e,this.fragmentShaderSource=t,this.programs=[],this.activeProgram=null,this.uniforms=[]}setKeywords(e){let t=0;for(let n=0;n<e.length;n++)t+=he(e[n]);let n=this.programs[t];if(null==n){let r=L(p.FRAGMENT_SHADER,this.fragmentShaderSource,e);n=_(this.vertexShader,r),this.programs[t]=n}n!==this.activeProgram&&(this.uniforms=y(n),this.activeProgram=n)}bind(){p.useProgram(this.activeProgram)}}(w,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    ");function ee(){let e=se(x.SIM_RESOLUTION),t=se(x.DYE_RESOLUTION);const n=S.halfFloatTexType,r=S.formatRGBA,i=S.formatRG,o=S.formatR,a=S.supportLinearFiltering?p.LINEAR:p.NEAREST;p.disable(p.BLEND),z=z?re(z,t.width,t.height,r.internalFormat,r.format,n,a):ne(t.width,t.height,r.internalFormat,r.format,n,a),M=M?re(M,e.width,e.height,i.internalFormat,i.format,n,a):ne(e.width,e.height,i.internalFormat,i.format,n,a),G=te(e.width,e.height,o.internalFormat,o.format,n,p.NEAREST),Y=te(e.width,e.height,o.internalFormat,o.format,n,p.NEAREST),H=ne(e.width,e.height,o.internalFormat,o.format,n,p.NEAREST)}function te(e,t,n,r,i,o){p.activeTexture(p.TEXTURE0);let a=p.createTexture();p.bindTexture(p.TEXTURE_2D,a),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,o),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,o),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texImage2D(p.TEXTURE_2D,0,n,e,t,0,r,i,null);let u=p.createFramebuffer();return p.bindFramebuffer(p.FRAMEBUFFER,u),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,a,0),p.viewport(0,0,e,t),p.clear(p.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:t,texelSizeX:1/e,texelSizeY:1/t,attach:e=>(p.activeTexture(p.TEXTURE0+e),p.bindTexture(p.TEXTURE_2D,a),e)}}function ne(e,t,n,r,i,o){let a=te(e,t,n,r,i,o),u=te(e,t,n,r,i,o);return{width:e,height:t,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){let e=a;a=u,u=e}}}function re(e,t,n,r,i,o,a){return e.width===t&&e.height===n||(e.read=function(e,t,n,r,i,o,a){let u=te(t,n,r,i,o,a);return V.bind(),p.uniform1i(V.uniforms.uTexture,e.attach(0)),X(u),u}(e.read,t,n,r,i,o,a),e.write=te(t,n,r,i,o,a),e.width=t,e.height=n,e.texelSizeX=1/t,e.texelSizeY=1/n),e}!function(){let e=[];x.SHADING&&e.push("SHADING"),$.setKeywords(e)}(),ee();let ie=Date.now(),oe=0;function ae(){const e=function(){let e=Date.now(),t=(e-ie)/1e3;return t=Math.min(t,.016666),ie=e,t}();(function(){let e=me(r.clientWidth),t=me(r.clientHeight);return(r.width!==e||r.height!==t)&&(r.width=e,r.height=t,!0)})()&&ee(),function(e){oe+=e*x.COLOR_UPDATE_SPEED,oe>=1&&(oe=(oe-0)%1+0,R.forEach((e=>{e.color=fe()})))}(e),R.forEach((e=>{e.moved&&(e.moved=!1,function(e){let t=e.deltaX*x.SPLAT_FORCE,n=e.deltaY*x.SPLAT_FORCE;ue(e.texcoordX,e.texcoordY,t,n,e.color)}(e))})),function(e){p.disable(p.BLEND),j.bind(),p.uniform2f(j.uniforms.texelSize,M.texelSizeX,M.texelSizeY),p.uniform1i(j.uniforms.uVelocity,M.read.attach(0)),X(Y),J.bind(),p.uniform2f(J.uniforms.texelSize,M.texelSizeX,M.texelSizeY),p.uniform1i(J.uniforms.uVelocity,M.read.attach(0)),p.uniform1i(J.uniforms.uCurl,Y.attach(1)),p.uniform1f(J.uniforms.curl,x.CURL),p.uniform1f(J.uniforms.dt,e),X(M.write),M.swap(),q.bind(),p.uniform2f(q.uniforms.texelSize,M.texelSizeX,M.texelSizeY),p.uniform1i(q.uniforms.uVelocity,M.read.attach(0)),X(G),W.bind(),p.uniform1i(W.uniforms.uTexture,H.read.attach(0)),p.uniform1f(W.uniforms.value,x.PRESSURE),X(H.write),H.swap(),Q.bind(),p.uniform2f(Q.uniforms.texelSize,M.texelSizeX,M.texelSizeY),p.uniform1i(Q.uniforms.uDivergence,G.attach(0));for(let e=0;e<x.PRESSURE_ITERATIONS;e++)p.uniform1i(Q.uniforms.uPressure,H.read.attach(1)),X(H.write),H.swap();Z.bind(),p.uniform2f(Z.uniforms.texelSize,M.texelSizeX,M.texelSizeY),p.uniform1i(Z.uniforms.uPressure,H.read.attach(0)),p.uniform1i(Z.uniforms.uVelocity,M.read.attach(1)),X(M.write),M.swap(),K.bind(),p.uniform2f(K.uniforms.texelSize,M.texelSizeX,M.texelSizeY),S.supportLinearFiltering||p.uniform2f(K.uniforms.dyeTexelSize,M.texelSizeX,M.texelSizeY);let t=M.read.attach(0);p.uniform1i(K.uniforms.uVelocity,t),p.uniform1i(K.uniforms.uSource,t),p.uniform1f(K.uniforms.dt,e),p.uniform1f(K.uniforms.dissipation,x.VELOCITY_DISSIPATION),X(M.write),M.swap(),S.supportLinearFiltering||p.uniform2f(K.uniforms.dyeTexelSize,z.texelSizeX,z.texelSizeY),p.uniform1i(K.uniforms.uVelocity,M.read.attach(0)),p.uniform1i(K.uniforms.uSource,z.read.attach(1)),p.uniform1f(K.uniforms.dissipation,x.DENSITY_DISSIPATION),X(z.write),z.swap()}(e),p.blendFunc(p.ONE,p.ONE_MINUS_SRC_ALPHA),p.enable(p.BLEND),function(e){let t=p.drawingBufferWidth,n=p.drawingBufferHeight;$.bind(),x.SHADING&&p.uniform2f($.uniforms.texelSize,1/t,1/n),p.uniform1i($.uniforms.uTexture,z.read.attach(0)),X(e)}(null),requestAnimationFrame(ae)}function ue(e,t,n,i,o){k.bind(),p.uniform1i(k.uniforms.uTarget,M.read.attach(0)),p.uniform1f(k.uniforms.aspectRatio,r.width/r.height),p.uniform2f(k.uniforms.point,e,t),p.uniform3f(k.uniforms.color,n,i,0),p.uniform1f(k.uniforms.radius,function(e){let t=r.width/r.height;return t>1&&(e*=t),e}(x.SPLAT_RADIUS/100)),X(M.write),M.swap(),p.uniform1i(k.uniforms.uTarget,z.read.attach(0)),p.uniform3f(k.uniforms.color,o.r,o.g,o.b),X(z.write),z.swap()}function ce(e,t,n,i){e.id=t,e.down=!0,e.moved=!1,e.texcoordX=n/r.width,e.texcoordY=1-i/r.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=fe()}function le(e,t,n,i){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=t/r.width,e.texcoordY=1-n/r.height,e.deltaX=function(e){let t=r.width/r.height;return t<1&&(e*=t),e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){let t=r.width/r.height;return t>1&&(e/=t),e}(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0,e.color=i}function ve(e){e.down=!1}function fe(){let e=function(e){let t,n,r,i,o,a,u,c;switch(i=Math.floor(6*e),o=6*e-i,a=0,u=1*(1-1*o),c=1*(1-1*(1-o)),i%6){case 0:t=1,n=c,r=0;break;case 1:t=u,n=1,r=0;break;case 2:t=0,n=1,r=c;break;case 3:t=0,n=u,r=1;break;case 4:t=c,n=0,r=1;break;case 5:t=1,n=0,r=u}return{r:t,g:n,b:r}}(Math.random());return e.r*=.15,e.g*=.15,e.b*=.15,e}function se(e){let t=p.drawingBufferWidth/p.drawingBufferHeight;t<1&&(t=1/t);const n=Math.round(e),r=Math.round(e*t);return p.drawingBufferWidth>p.drawingBufferHeight?{width:r,height:n}:{width:n,height:r}}function me(e){const t=window.devicePixelRatio||1;return Math.floor(e*t)}function he(e){if(0===e.length)return 0;let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return t}function de(e,t){if(T)return{x:e.clientX,y:e.clientY,width:window.innerWidth,height:window.innerHeight};const n=t.getBoundingClientRect();return{x:e.clientX-n.left,y:e.clientY-n.top,width:n.width,height:n.height}}function Ee(e){if(T&&E&&("css-selectors"===E.cursorScope||"html-elements"===E.cursorScope)){const t=document.elementFromPoint(e.x,e.y);return!!(t&&t.hasAttribute&&t.hasAttribute("data-ultimate-cursor-active"))}return e.x>=0&&e.y>=0&&e.x<=e.width&&e.y<=e.height}const ge=e=>{const t=de(e,Ae);if(!Ee(t))return;let n=R[0];ce(n,-1,me(t.x),me(t.y)),function(e){const t=fe();t.r*=10,t.g*=10,t.b*=10;let n=10*(Math.random()-.5),r=30*(Math.random()-.5);ue(e.texcoordX,e.texcoordY,n,r,t)}(n)},Te=e=>{const t=de(e,Ae);if(!Ee(t))return;let n=R[0];le(n,me(t.x),me(t.y),n.color)},xe=e=>{const t=e.targetTouches;let n=R[0];for(let e=0;e<t.length;e++){const r=de(t[e],Ae);if(!Ee(r))continue;let i=me(r.x),o=me(r.y);ce(n,t[e].identifier,i,o)}},Re=e=>{const t=e.targetTouches;let n=R[0];for(let e=0;e<t.length;e++){const r=de(t[e],Ae);Ee(r)&&le(n,me(r.x),me(r.y),n.color)}},pe=e=>{const t=e.changedTouches;let n=R[0];for(let e=0;e<t.length;e++)ve(n)},Se=()=>{x.PAUSED=!0},De=()=>{x.PAUSED=!1,ae()},Ae=T?document:d;function _e(){if(T)r.width=me(window.innerWidth),r.height=me(window.innerHeight);else{const e=d.getBoundingClientRect();r.width=me(e.width),r.height=me(e.height)}}return Ae.addEventListener("mousedown",ge),Ae.addEventListener("mousemove",(function e(t){const n=de(t,Ae);if(!Ee(n))return;let r=R[0],i=me(n.x),o=me(n.y),a=fe();ae(),le(r,i,o,a),Ae.removeEventListener("mousemove",e)})),Ae.addEventListener("mousemove",Te),Ae.addEventListener("touchstart",(function e(t){const n=t.targetTouches;let r=R[0];for(let e=0;e<n.length;e++){const t=de(n[e],Ae);if(!Ee(t))continue;let i=me(t.x),o=me(t.y);ae(),ce(r,n[e].identifier,i,o)}Ae.removeEventListener("touchstart",e)})),Ae.addEventListener("touchstart",xe),Ae.addEventListener("touchmove",Re,!1),Ae.addEventListener("touchend",pe),Ae.addEventListener("mouseleave",Se),Ae.addEventListener("mouseenter",De),_e(),window.addEventListener("resize",_e),ae(),()=>{Ae.removeEventListener("mousedown",ge),Ae.removeEventListener("mousemove",Te),Ae.removeEventListener("touchstart",xe),Ae.removeEventListener("touchmove",Re),Ae.removeEventListener("touchend",pe),Ae.removeEventListener("mouseenter",De),Ae.removeEventListener("mouseleave",Se),window.removeEventListener("resize",_e)}}),[e,t,n,i,o,a,u,c,l,v,f,s,m,h,d,E]),(0,r.createElement)("div",{style:{position:"absolute",top:0,left:0,zIndex:50,pointerEvents:"none",width:"100%",height:"100%",overflow:"hidden"}},(0,r.createElement)("canvas",{ref:g,id:"fluid",style:{width:"100%",height:"100%",display:"block"}}))}}}]);