"use strict";(globalThis.webpackChunkultimate_cursor=globalThis.webpackChunkultimate_cursor||[]).push([[501],{501:(e,t,r)=>{r.d(t,{default:()=>i});var n=r(609);const i=function({SIM_RESOLUTION:e=128,DYE_RESOLUTION:t=1440,CAPTURE_RESOLUTION:r=512,DENSITY_DISSIPATION:i=3.5,VELOCITY_DISSIPATION:o=2,PRESSURE:a=.1,PRESSURE_ITERATIONS:u=20,CURL:c=3,SPLAT_RADIUS:l=.5,SPLAT_FORCE:s=6e3,SHADING:v=!1,COLOR_UPDATE_SPEED:f=10,BACK_COLOR:m={r:0,g:0,b:0},TRANSPARENT:h=!0,colors:d=["#ff0000","#00ff00","#0000ff"],wrapperElement:g,props:E}){const T=(0,n.useRef)(null),x=(0,n.useRef)(0);return(0,n.useEffect)((()=>{const n=T.current,R=!g||g===document.body;if(!n)return;let p={SIM_RESOLUTION:e,DYE_RESOLUTION:t,CAPTURE_RESOLUTION:r,DENSITY_DISSIPATION:i,VELOCITY_DISSIPATION:o,PRESSURE:a,PRESSURE_ITERATIONS:u,CURL:c,SPLAT_RADIUS:void 0!==E?.splashRadius?E.splashRadius:l,SPLAT_FORCE:void 0!==E?.splashForce?E.splashForce:s,SHADING:E?.splashShading||v,COLOR_UPDATE_SPEED:E?.splashColorUpdateSpeed||f,PAUSED:!1,BACK_COLOR:E?.splashBackColor||m,TRANSPARENT:E?.splashTransparent||h,...E||{}},S=[new function(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[250,0,0]}];const{gl:D,ext:A}=function(e){const t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let r=e.getContext("webgl2",t);const n=!!r;let i,o;n||(r=e.getContext("webgl",t)||e.getContext("experimental-webgl",t)),n?(r.getExtension("EXT_color_buffer_float"),o=r.getExtension("OES_texture_float_linear")):(i=r.getExtension("OES_texture_half_float"),o=r.getExtension("OES_texture_half_float_linear")),r.clearColor(0,0,0,1);const a=n?r.HALF_FLOAT:i&&i.HALF_FLOAT_OES;let u,c,l;return n?(u=_(r,r.RGBA16F,r.RGBA,a),c=_(r,r.RG16F,r.RG,a),l=_(r,r.R16F,r.RED,a)):(u=_(r,r.RGBA,r.RGBA,a),c=_(r,r.RGBA,r.RGBA,a),l=_(r,r.RGBA,r.RGBA,a)),{gl:r,ext:{formatRGBA:u,formatRG:c,formatR:l,halfFloatTexType:a,supportLinearFiltering:o}}}(n);function _(e,t,r,n){if(!function(e,t,r,n){const i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,r,n,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);return e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE}(e,t,r,n))switch(t){case e.R16F:return _(e,e.RG16F,e.RG,n);case e.RG16F:return _(e,e.RGBA16F,e.RGBA,n);default:return null}return{internalFormat:t,format:r}}A.supportLinearFiltering||(p.DYE_RESOLUTION=256,p.SHADING=!1);class y{constructor(e,t){this.uniforms={},this.program=L(e,t),this.uniforms=U(this.program)}bind(){D.useProgram(this.program)}}function L(e,t){let r=D.createProgram();return D.attachShader(r,e),D.attachShader(r,t),D.linkProgram(r),D.getProgramParameter(r,D.LINK_STATUS)||console.trace(D.getProgramInfoLog(r)),r}function U(e){let t=[],r=D.getProgramParameter(e,D.ACTIVE_UNIFORMS);for(let n=0;n<r;n++){let r=D.getActiveUniform(e,n).name;t[r]=D.getUniformLocation(e,r)}return t}function w(e,t,r){t=function(e,t){if(!t)return e;let r="";return t.forEach((e=>{r+="#define "+e+"\n"})),r+e}(t,r);const n=D.createShader(e);return D.shaderSource(n,t),D.compileShader(n),D.getShaderParameter(n,D.COMPILE_STATUS)||console.trace(D.getShaderInfoLog(n)),n}const F=w(D.VERTEX_SHADER,"\n        precision highp float;\n        attribute vec2 aPosition;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform vec2 texelSize;\n\n        void main () {\n            vUv = aPosition * 0.5 + 0.5;\n            vL = vUv - vec2(texelSize.x, 0.0);\n            vR = vUv + vec2(texelSize.x, 0.0);\n            vT = vUv + vec2(0.0, texelSize.y);\n            vB = vUv - vec2(0.0, texelSize.y);\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n        }\n      "),P=w(D.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n\n        void main () {\n            gl_FragColor = texture2D(uTexture, vUv);\n        }\n      "),b=w(D.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float value;\n\n        void main () {\n            gl_FragColor = value * texture2D(uTexture, vUv);\n        }\n      "),I=w(D.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTarget;\n        uniform float aspectRatio;\n        uniform vec3 color;\n        uniform vec2 point;\n        uniform float radius;\n\n        void main () {\n            vec2 p = vUv - point.xy;\n            p.x *= aspectRatio;\n            vec3 splat = exp(-dot(p, p) / radius) * color;\n            vec3 base = texture2D(uTarget, vUv).xyz;\n            gl_FragColor = vec4(base + splat, 1.0);\n        }\n      "),B=w(D.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform vec2 dyeTexelSize;\n        uniform float dt;\n        uniform float dissipation;\n\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n            vec2 st = uv / tsize - 0.5;\n            vec2 iuv = floor(st);\n            vec2 fuv = fract(st);\n\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n        }\n\n        void main () {\n            #ifdef MANUAL_FILTERING\n                vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n                vec4 result = bilerp(uSource, coord, dyeTexelSize);\n            #else\n                vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n                vec4 result = texture2D(uSource, coord);\n            #endif\n            float decay = 1.0 + dissipation * dt;\n            gl_FragColor = result / decay;\n        }\n      ",A.supportLinearFiltering?null:["MANUAL_FILTERING"]),C=w(D.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).x;\n            float R = texture2D(uVelocity, vR).x;\n            float T = texture2D(uVelocity, vT).y;\n            float B = texture2D(uVelocity, vB).y;\n\n            vec2 C = texture2D(uVelocity, vUv).xy;\n            if (vL.x < 0.0) { L = -C.x; }\n            if (vR.x > 1.0) { R = -C.x; }\n            if (vT.y > 1.0) { T = -C.y; }\n            if (vB.y < 0.0) { B = -C.y; }\n\n            float div = 0.5 * (R - L + T - B);\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n        }\n      "),N=w(D.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).y;\n            float R = texture2D(uVelocity, vR).y;\n            float T = texture2D(uVelocity, vT).x;\n            float B = texture2D(uVelocity, vB).x;\n            float vorticity = R - L - T + B;\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n        }\n      "),O=w(D.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uCurl;\n        uniform float curl;\n        uniform float dt;\n\n        void main () {\n            float L = texture2D(uCurl, vL).x;\n            float R = texture2D(uCurl, vR).x;\n            float T = texture2D(uCurl, vT).x;\n            float B = texture2D(uCurl, vB).x;\n            float C = texture2D(uCurl, vUv).x;\n\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n            force /= length(force) + 0.0001;\n            force *= curl * C;\n            force.y *= -1.0;\n\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity += force * dt;\n            velocity = min(max(velocity, -1000.0), 1000.0);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),X=w(D.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uDivergence;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            float C = texture2D(uPressure, vUv).x;\n            float divergence = texture2D(uDivergence, vUv).x;\n            float pressure = (L + R + B + T - divergence) * 0.25;\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n        }\n      "),z=w(D.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity.xy -= vec2(R - L, T - B);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),G=(D.bindBuffer(D.ARRAY_BUFFER,D.createBuffer()),D.bufferData(D.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),D.STATIC_DRAW),D.bindBuffer(D.ELEMENT_ARRAY_BUFFER,D.createBuffer()),D.bufferData(D.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),D.STATIC_DRAW),D.vertexAttribPointer(0,2,D.FLOAT,!1,0,0),D.enableVertexAttribArray(0),(e,t=!1)=>{null==e?(D.viewport(0,0,D.drawingBufferWidth,D.drawingBufferHeight),D.bindFramebuffer(D.FRAMEBUFFER,null)):(D.viewport(0,0,e.width,e.height),D.bindFramebuffer(D.FRAMEBUFFER,e.fbo)),t&&(D.clearColor(0,0,0,1),D.clear(D.COLOR_BUFFER_BIT)),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0)});let M,Y,H,V,W;const k=new y(F,P),K=new y(F,b),q=new y(F,I),j=new y(F,B),J=new y(F,C),Q=new y(F,N),Z=new y(F,O),$=new y(F,X),ee=new y(F,z),te=new class{constructor(e,t){this.vertexShader=e,this.fragmentShaderSource=t,this.programs=[],this.activeProgram=null,this.uniforms=[]}setKeywords(e){let t=0;for(let r=0;r<e.length;r++)t+=ge(e[r]);let r=this.programs[t];if(null==r){let n=w(D.FRAGMENT_SHADER,this.fragmentShaderSource,e);r=L(this.vertexShader,n),this.programs[t]=r}r!==this.activeProgram&&(this.uniforms=U(r),this.activeProgram=r)}bind(){D.useProgram(this.activeProgram)}}(F,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    ");function re(){let e=he(p.SIM_RESOLUTION),t=he(p.DYE_RESOLUTION);const r=A.halfFloatTexType,n=A.formatRGBA,i=A.formatRG,o=A.formatR,a=A.supportLinearFiltering?D.LINEAR:D.NEAREST;D.disable(D.BLEND),M=M?oe(M,t.width,t.height,n.internalFormat,n.format,r,a):ie(t.width,t.height,n.internalFormat,n.format,r,a),Y=Y?oe(Y,e.width,e.height,i.internalFormat,i.format,r,a):ie(e.width,e.height,i.internalFormat,i.format,r,a),H=ne(e.width,e.height,o.internalFormat,o.format,r,D.NEAREST),V=ne(e.width,e.height,o.internalFormat,o.format,r,D.NEAREST),W=ie(e.width,e.height,o.internalFormat,o.format,r,D.NEAREST)}function ne(e,t,r,n,i,o){D.activeTexture(D.TEXTURE0);let a=D.createTexture();D.bindTexture(D.TEXTURE_2D,a),D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MIN_FILTER,o),D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MAG_FILTER,o),D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_S,D.CLAMP_TO_EDGE),D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_T,D.CLAMP_TO_EDGE),D.texImage2D(D.TEXTURE_2D,0,r,e,t,0,n,i,null);let u=D.createFramebuffer();return D.bindFramebuffer(D.FRAMEBUFFER,u),D.framebufferTexture2D(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,a,0),D.viewport(0,0,e,t),D.clear(D.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:t,texelSizeX:1/e,texelSizeY:1/t,attach:e=>(D.activeTexture(D.TEXTURE0+e),D.bindTexture(D.TEXTURE_2D,a),e)}}function ie(e,t,r,n,i,o){let a=ne(e,t,r,n,i,o),u=ne(e,t,r,n,i,o);return{width:e,height:t,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){let e=a;a=u,u=e}}}function oe(e,t,r,n,i,o,a){return e.width===t&&e.height===r||(e.read=function(e,t,r,n,i,o,a){let u=ne(t,r,n,i,o,a);return k.bind(),D.uniform1i(k.uniforms.uTexture,e.attach(0)),G(u),u}(e.read,t,r,n,i,o,a),e.write=ne(t,r,n,i,o,a),e.width=t,e.height=r,e.texelSizeX=1/t,e.texelSizeY=1/r),e}!function(){let e=[];p.SHADING&&e.push("SHADING"),te.setKeywords(e)}(),re();let ae=Date.now(),ue=0;function ce(){const e=function(){let e=Date.now(),t=(e-ae)/1e3;return t=Math.min(t,.016666),ae=e,t}();(function(){let e=de(n.clientWidth),t=de(n.clientHeight);return(n.width!==e||n.height!==t)&&(n.width=e,n.height=t,!0)})()&&re(),function(e){ue+=e*p.COLOR_UPDATE_SPEED,ue>=1&&(ue=(ue-0)%1+0,S.forEach((e=>{e.color=me()})))}(e),S.forEach((e=>{e.moved&&(e.moved=!1,function(e){let t=e.deltaX*p.SPLAT_FORCE,r=e.deltaY*p.SPLAT_FORCE;le(e.texcoordX,e.texcoordY,t,r,e.color)}(e))})),function(e){D.disable(D.BLEND),Q.bind(),D.uniform2f(Q.uniforms.texelSize,Y.texelSizeX,Y.texelSizeY),D.uniform1i(Q.uniforms.uVelocity,Y.read.attach(0)),G(V),Z.bind(),D.uniform2f(Z.uniforms.texelSize,Y.texelSizeX,Y.texelSizeY),D.uniform1i(Z.uniforms.uVelocity,Y.read.attach(0)),D.uniform1i(Z.uniforms.uCurl,V.attach(1)),D.uniform1f(Z.uniforms.curl,p.CURL),D.uniform1f(Z.uniforms.dt,e),G(Y.write),Y.swap(),J.bind(),D.uniform2f(J.uniforms.texelSize,Y.texelSizeX,Y.texelSizeY),D.uniform1i(J.uniforms.uVelocity,Y.read.attach(0)),G(H),K.bind(),D.uniform1i(K.uniforms.uTexture,W.read.attach(0)),D.uniform1f(K.uniforms.value,p.PRESSURE),G(W.write),W.swap(),$.bind(),D.uniform2f($.uniforms.texelSize,Y.texelSizeX,Y.texelSizeY),D.uniform1i($.uniforms.uDivergence,H.attach(0));for(let e=0;e<p.PRESSURE_ITERATIONS;e++)D.uniform1i($.uniforms.uPressure,W.read.attach(1)),G(W.write),W.swap();ee.bind(),D.uniform2f(ee.uniforms.texelSize,Y.texelSizeX,Y.texelSizeY),D.uniform1i(ee.uniforms.uPressure,W.read.attach(0)),D.uniform1i(ee.uniforms.uVelocity,Y.read.attach(1)),G(Y.write),Y.swap(),j.bind(),D.uniform2f(j.uniforms.texelSize,Y.texelSizeX,Y.texelSizeY),A.supportLinearFiltering||D.uniform2f(j.uniforms.dyeTexelSize,Y.texelSizeX,Y.texelSizeY);let t=Y.read.attach(0);D.uniform1i(j.uniforms.uVelocity,t),D.uniform1i(j.uniforms.uSource,t),D.uniform1f(j.uniforms.dt,e),D.uniform1f(j.uniforms.dissipation,p.VELOCITY_DISSIPATION),G(Y.write),Y.swap(),A.supportLinearFiltering||D.uniform2f(j.uniforms.dyeTexelSize,M.texelSizeX,M.texelSizeY),D.uniform1i(j.uniforms.uVelocity,Y.read.attach(0)),D.uniform1i(j.uniforms.uSource,M.read.attach(1)),D.uniform1f(j.uniforms.dissipation,p.DENSITY_DISSIPATION),G(M.write),M.swap()}(e),D.blendFunc(D.ONE,D.ONE_MINUS_SRC_ALPHA),D.enable(D.BLEND),function(e){let t=D.drawingBufferWidth,r=D.drawingBufferHeight;te.bind(),p.SHADING&&D.uniform2f(te.uniforms.texelSize,1/t,1/r),D.uniform1i(te.uniforms.uTexture,M.read.attach(0)),G(e)}(null),requestAnimationFrame(ce)}function le(e,t,r,i,o){q.bind(),D.uniform1i(q.uniforms.uTarget,Y.read.attach(0)),D.uniform1f(q.uniforms.aspectRatio,n.width/n.height),D.uniform2f(q.uniforms.point,e,t),D.uniform3f(q.uniforms.color,r,i,0),D.uniform1f(q.uniforms.radius,function(e){let t=n.width/n.height;return t>1&&(e*=t),e}(p.SPLAT_RADIUS/100)),G(Y.write),Y.swap(),D.uniform1i(q.uniforms.uTarget,M.read.attach(0)),D.uniform3f(q.uniforms.color,o.r,o.g,o.b),G(M.write),M.swap()}function se(e,t,r,i){e.id=t,e.down=!0,e.moved=!1,e.texcoordX=r/n.width,e.texcoordY=1-i/n.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=me()}function ve(e,t,r,i){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=t/n.width,e.texcoordY=1-r/n.height,e.deltaX=function(e){let t=n.width/n.height;return t<1&&(e*=t),e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){let t=n.width/n.height;return t>1&&(e/=t),e}(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0,e.color=i}function fe(e){e.down=!1}function me(){const e=(E?.splashColors?E.splashColors[x.current]:d[x.current]).replace("#",""),t=parseInt(e.substring(0,2),16)/255,r=parseInt(e.substring(2,4),16)/255,n=parseInt(e.substring(4,6),16)/255;return x.current=(x.current+1)%(E?.splashColors?.length||d.length),{r:.15*t,g:.15*r,b:.15*n}}function he(e){let t=D.drawingBufferWidth/D.drawingBufferHeight;t<1&&(t=1/t);const r=Math.round(e),n=Math.round(e*t);return D.drawingBufferWidth>D.drawingBufferHeight?{width:n,height:r}:{width:r,height:n}}function de(e){const t=window.devicePixelRatio||1;return Math.floor(e*t)}function ge(e){if(0===e.length)return 0;let t=0;for(let r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;return t}function Ee(e,t){if(R)return{x:e.clientX,y:e.clientY,width:window.innerWidth,height:window.innerHeight};const r=t.getBoundingClientRect();return{x:e.clientX-r.left,y:e.clientY-r.top,width:r.width,height:r.height}}function Te(e){if(R&&E&&("css-selectors"===E.cursorScope||"html-elements"===E.cursorScope)){const t=document.elementFromPoint(e.x,e.y);return!!(t&&t.hasAttribute&&t.hasAttribute("data-ultimate-cursor-active"))}return e.x>=0&&e.y>=0&&e.x<=e.width&&e.y<=e.height}const xe=e=>{const t=Ee(e,ye);if(!Te(t))return;let r=S[0];se(r,-1,de(t.x),de(t.y)),function(e){const t=me();t.r*=10,t.g*=10,t.b*=10;let r=10*(Math.random()-.5),n=30*(Math.random()-.5);le(e.texcoordX,e.texcoordY,r,n,t)}(r)},Re=e=>{const t=Ee(e,ye);if(!Te(t))return;let r=S[0];ve(r,de(t.x),de(t.y),r.color)},pe=e=>{const t=e.targetTouches;let r=S[0];for(let e=0;e<t.length;e++){const n=Ee(t[e],ye);if(!Te(n))continue;let i=de(n.x),o=de(n.y);se(r,t[e].identifier,i,o)}},Se=e=>{const t=e.targetTouches;let r=S[0];for(let e=0;e<t.length;e++){const n=Ee(t[e],ye);Te(n)&&ve(r,de(n.x),de(n.y),r.color)}},De=e=>{const t=e.changedTouches;let r=S[0];for(let e=0;e<t.length;e++)fe(r)},Ae=()=>{p.PAUSED=!0},_e=()=>{p.PAUSED=!1,ce()},ye=R?document:g;function Le(){if(R)n.width=de(window.innerWidth),n.height=de(window.innerHeight);else{const e=g.getBoundingClientRect();n.width=de(e.width),n.height=de(e.height)}}return ye.addEventListener("mousedown",xe),ye.addEventListener("mousemove",(function e(t){const r=Ee(t,ye);if(!Te(r))return;let n=S[0],i=de(r.x),o=de(r.y),a=me();ce(),ve(n,i,o,a),ye.removeEventListener("mousemove",e)})),ye.addEventListener("mousemove",Re),ye.addEventListener("touchstart",(function e(t){const r=t.targetTouches;let n=S[0];for(let e=0;e<r.length;e++){const t=Ee(r[e],ye);if(!Te(t))continue;let i=de(t.x),o=de(t.y);ce(),se(n,r[e].identifier,i,o)}ye.removeEventListener("touchstart",e)})),ye.addEventListener("touchstart",pe),ye.addEventListener("touchmove",Se,!1),ye.addEventListener("touchend",De),ye.addEventListener("mouseleave",Ae),ye.addEventListener("mouseenter",_e),Le(),window.addEventListener("resize",Le),ce(),()=>{ye.removeEventListener("mousedown",xe),ye.removeEventListener("mousemove",Re),ye.removeEventListener("touchstart",pe),ye.removeEventListener("touchmove",Se),ye.removeEventListener("touchend",De),ye.removeEventListener("mouseenter",_e),ye.removeEventListener("mouseleave",Ae),window.removeEventListener("resize",Le)}}),[e,t,r,i,o,a,u,c,l,s,v,f,m,h,d,g,E]),(0,n.createElement)("div",{style:{position:"absolute",top:0,left:0,zIndex:50,pointerEvents:"none",width:"100%",height:"100%",overflow:"hidden"}},(0,n.createElement)("canvas",{ref:T,id:"fluid",style:{width:"100%",height:"100%",display:"block"}}))}}}]);